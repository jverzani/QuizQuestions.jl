# A simple self-grading quiz

```julia
using QuizQuestions
```

Match `abc`

```julia; echo=false
re = Regex("abc")
stringq(re)
```

Enter a large number

```julia; echo=false
funct = "(input) => input >= 42"
scriptq(funct, explanation="should be at least 6 * 7")
```

```julia; echo=false
a = 1
numericq(a, label= raw"What is ``\sin(\frac{\pi}{2})``?")
```

What is ``100`` centimeters in meters?

```julia; echo=false
a = 1
numericq(a, units="meter(s)", hint="It is 1")
```


What is ``\sqrt{2}``?

```julia; echo=false
a = sqrt(2)
Δ = 1e-2
numericq(a, Δ, hint="use 3 digits")
```


What is "one"?

```julia; echo=false
choices = ("``1``", "``2``", "``3``")
answer = 1
radioq(choices, answer, hint="select the number matching the word", keep_order=true)
```



```julia; echo=false
choices = ["beta", raw"``\beta``", "`beta`"]
answer = 2
radioq(choices, answer; label="Which is the letter?", hint="Which is the Greek symbol?")
```

Matching question

```julia; echo=false
questions = ("Select a Volvo", "Select a Mercedes", "Select an Audi")
choices = ("XC90", "A4", "GLE 350", "X1") # may be more than questions
answer = (1,3,2) # indices of correct
matchq(questions, choices, answer)
```

Button choice

```julia; echo=false
choices = ["beta", raw"``\beta``", "`beta`"]
answer = 2
buttonq(choices, answer; label="chose the letter", hint="Which is the Greek symbol?")
```

Hotspot

```julia; hold=true; echo=false
using Plots
p1 = plot(x -> x^2, axis=nothing, legend=false)
p2 = plot(x -> x^3, axis=nothing, legend=false)
p3 = plot(x -> -x^2, axis=nothing, legend=false)
p4 = plot(x -> -x^3, axis=nothing, legend=false)
l = @layout [a b; c d]
p = plot(p1, p2, p3, p4, layout=l)
imgfile = tempname() * ".png"
savefig(p, imgfile)
hotspotq(imgfile, (0,1/2), (0, 1/2), label="What best matches the graph of ``f(x) = -x^4``?")
```


PlotlyLight

```julia; hold=true; echo=false
using PlotlyLight # not loaded by default
xs = range(0, 2pi, length=100)
ys = sin.(xs)
p = Plot(Config(x=xs, y=ys))
plotlylightq(p, (3,Inf); label="Click a value with ``x>3``")
```
